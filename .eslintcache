[{"/Users/markoarsovic/b2s/src/containers/Connection/Connection.js":"1","/Users/markoarsovic/b2s/src/components/UI/Spinner/Spinner.js":"2","/Users/markoarsovic/b2s/src/components/MyAccount/Logout/Logout.js":"3","/Users/markoarsovic/b2s/src/components/UI/Button/Button.js":"4","/Users/markoarsovic/b2s/src/components/UI/Input/Input.js":"5","/Users/markoarsovic/b2s/src/components/MyAccount/MyAccount.js":"6","/Users/markoarsovic/b2s/src/containers/Account/Batisphere/Account.js":"7","/Users/markoarsovic/b2s/src/containers/Account/Admin/Account.js":"8","/Users/markoarsovic/b2s/src/containers/Account/Client/Account.js":"9","/Users/markoarsovic/b2s/src/components/Auth/Client/Auth.js":"10","/Users/markoarsovic/b2s/src/components/Auth/Others/Auth.js":"11","/Users/markoarsovic/b2s/src/App.js":"12","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItems.js":"13","/Users/markoarsovic/b2s/src/components/Navigation/Toolbar/Toolbar.js":"14","/Users/markoarsovic/b2s/src/index.js":"15","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"16","/Users/markoarsovic/b2s/src/hoc/Layout/Layout.js":"17","/Users/markoarsovic/b2s/src/components/Navigation/AccountToolbar/Toolbar.js":"18","/Users/markoarsovic/b2s/src/hoc/Aux/Aux.js":"19","/Users/markoarsovic/b2s/src/components/Users/ListUsers/Admin/ListUsers.js":"20","/Users/markoarsovic/b2s/src/components/Users/ListUsers/Batiphere/ListUsers.js":"21","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListUsers/ListUsers.js":"22","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListCustomers/ListCustomers.js":"23","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUsers.js":"24","/Users/markoarsovic/b2s/src/components/UI/Modal/Modal.js":"25","/Users/markoarsovic/b2s/src/components/UI/Backdrop/Backdrop.js":"26","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUser/EditUser.js":"27","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/AddUser/AddUser.js":"28","/Users/markoarsovic/b2s/src/hoc/AccountLayout/Layout.js":"29","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/AddUSer/AddUser.js":"30","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/SecondNavigationItems.js":"31","/Users/markoarsovic/b2s/src/containers/Account/Client/Charts/Chart1.js":"32","/Users/markoarsovic/b2s/src/containers/Account/Client/Advices/Advices.js":"33","/Users/markoarsovic/b2s/src/containers/Account/Client/Advices/Advice/Advice.js":"34","/Users/markoarsovic/b2s/src/components/CSV/processingCSV.js":"35","/Users/markoarsovic/b2s/src/components/FormCircuits/FormCircuits.js":"36","/Users/markoarsovic/b2s/src/components/FormCircuits/Rooms/Rooms.js":"37","/Users/markoarsovic/b2s/src/components/FormCircuits/Circuits/Circuits.js":"38"},{"size":4671,"mtime":1611670803633,"results":"39","hashOfConfig":"40"},{"size":226,"mtime":1610546822520,"results":"41","hashOfConfig":"40"},{"size":684,"mtime":1610900494665,"results":"42","hashOfConfig":"40"},{"size":316,"mtime":1610362353115,"results":"43","hashOfConfig":"40"},{"size":1708,"mtime":1610361813977,"results":"44","hashOfConfig":"40"},{"size":424,"mtime":1611582996922,"results":"45","hashOfConfig":"40"},{"size":1355,"mtime":1611311358689,"results":"46","hashOfConfig":"40"},{"size":1333,"mtime":1611760851890,"results":"47","hashOfConfig":"40"},{"size":897,"mtime":1611760851891,"results":"48","hashOfConfig":"40"},{"size":5841,"mtime":1611583000494,"results":"49","hashOfConfig":"40"},{"size":6250,"mtime":1610986243370,"results":"50","hashOfConfig":"40"},{"size":895,"mtime":1610718241449,"results":"51","hashOfConfig":"40"},{"size":488,"mtime":1610551868372,"results":"52","hashOfConfig":"40"},{"size":688,"mtime":1611313110357,"results":"53","hashOfConfig":"40"},{"size":262,"mtime":1611760851891,"results":"54","hashOfConfig":"40"},{"size":408,"mtime":1610319521080,"results":"55","hashOfConfig":"40"},{"size":448,"mtime":1610551352213,"results":"56","hashOfConfig":"40"},{"size":332,"mtime":1611314729935,"results":"57","hashOfConfig":"40"},{"size":61,"mtime":1610018977408,"results":"58","hashOfConfig":"40"},{"size":3061,"mtime":1611309173243,"results":"59","hashOfConfig":"40"},{"size":2167,"mtime":1610966506726,"results":"60","hashOfConfig":"40"},{"size":367,"mtime":1610977045568,"results":"61","hashOfConfig":"40"},{"size":386,"mtime":1610977240854,"results":"62","hashOfConfig":"40"},{"size":2050,"mtime":1611783975249,"results":"63","hashOfConfig":"40"},{"size":738,"mtime":1610966936253,"results":"64","hashOfConfig":"40"},{"size":220,"mtime":1610014250636,"results":"65","hashOfConfig":"40"},{"size":6866,"mtime":1611590318767,"results":"66","hashOfConfig":"40"},{"size":8709,"mtime":1611784029502,"results":"67","hashOfConfig":"40"},{"size":448,"mtime":1611311417354,"results":"68","hashOfConfig":"40"},{"size":8706,"mtime":1611309125199,"results":"69","hashOfConfig":"40"},{"size":1376,"mtime":1611319013820,"results":"70","hashOfConfig":"40"},{"size":954,"mtime":1611320890729,"results":"71","hashOfConfig":"40"},{"size":423,"mtime":1611784037067,"results":"72","hashOfConfig":"40"},{"size":292,"mtime":1611321143261,"results":"73","hashOfConfig":"40"},{"size":3248,"mtime":1611784149163,"results":"74","hashOfConfig":"40"},{"size":3113,"mtime":1611783941492,"results":"75","hashOfConfig":"40"},{"size":3696,"mtime":1611782134588,"results":"76","hashOfConfig":"40"},{"size":1635,"mtime":1611780027728,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"5fzxdm",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"/Users/markoarsovic/b2s/src/containers/Connection/Connection.js",[],["161","162"],"/Users/markoarsovic/b2s/src/components/UI/Spinner/Spinner.js",[],"/Users/markoarsovic/b2s/src/components/MyAccount/Logout/Logout.js",[],"/Users/markoarsovic/b2s/src/components/UI/Button/Button.js",[],"/Users/markoarsovic/b2s/src/components/UI/Input/Input.js",[],"/Users/markoarsovic/b2s/src/components/MyAccount/MyAccount.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Batisphere/Account.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Account.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Client/Account.js",[],"/Users/markoarsovic/b2s/src/components/Auth/Client/Auth.js",[],"/Users/markoarsovic/b2s/src/components/Auth/Others/Auth.js",[],"/Users/markoarsovic/b2s/src/App.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItems.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/markoarsovic/b2s/src/index.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/Users/markoarsovic/b2s/src/hoc/Layout/Layout.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/AccountToolbar/Toolbar.js",[],"/Users/markoarsovic/b2s/src/hoc/Aux/Aux.js",[],"/Users/markoarsovic/b2s/src/components/Users/ListUsers/Admin/ListUsers.js",["163"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Spinner from \"../../../UI/Spinner/Spinner\";\nimport styles from '../Users.module.css';\n\nclass ListUsers extends Component {\n\n    state = {\n        loading: true,\n        users: null\n    }\n\n\n    componentDidMount() {\n        let url = \"https://parseapi.back4app.com/users\";\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                this.setState({ users: res.data.results, loading: false })\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n\n        let listUsers = null;\n        let style = \"\";\n\n        if (this.state.loading === false) {\n            if (this.state.users !== null) {\n                style = styles.List;\n                listUsers = Object.keys(this.state.users)\n                    .map(key => {\n                        return [...Array(this.state.users[key])].map((_, i) => {\n                            if (this.state.users[key].right === \"batisphere\" ||\n                                this.state.users[key].right === \"client\" ||\n                                this.state.users[key].right === \"admin\") {\n                                if (this.props.spec === \"edit\") {\n                                    return (\n\n                                        <li key={key + 1} onClick={(event) => {\n                                            this.props.modal(true, this.state.users[key])\n                                        }\n                                        }>\n                                            <p>{this.state.users[key].username}</p>\n                                            <p> {this.state.users[key].right}</p>\n                                        </li>\n                                    )\n                                }\n                                if (this.props.spec === \"list\") {\n                                    return (\n                                        <li key={key + 1}>\n                                            <p>{this.state.users[key].username}</p>\n                                            <p> {this.state.users[key].right}</p>\n                                        </li>\n                                    )\n                                }\n                            }\n                        })\n                    })\n            }\n        } else {\n            listUsers = <Spinner />\n            style = styles.Spinner;\n        }\n        return (\n            <div className={style}>\n                <ul>\n                    {listUsers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ListUsers;","/Users/markoarsovic/b2s/src/components/Users/ListUsers/Batiphere/ListUsers.js",["164"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Spinner from \"../../../UI/Spinner/Spinner\";\nimport styles from '../Users.module.css';\n\nclass ListUsers extends Component {\n    state = {\n        loading: true,\n        users: null\n    }\n\n    componentDidMount() {\n        let url = \"https://parseapi.back4app.com/users\";\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\":  process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                this.setState({ users: res.data.results, loading: false })\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n\n        let listUsers = null;\n        let style = \"\";\n\n        if (this.state.loading === false) {\n            if (this.state.users !== null) {\n                style = styles.List;\n                listUsers = Object.keys(this.state.users)\n                    .map(key => {\n                        return [...Array(this.state.users[key])].map((_, i) => {\n                            if (this.state.users[key].right === \"client\") { // Affichage uniquement des clients\n                                return (\n                                    <li key={key + 1}>\n                                        <p>{this.state.users[key].username}</p>\n                                        <p> {this.state.users[key].right}</p>\n                                    </li>\n                                )\n                            }\n                        })\n                    })\n            }\n        } else {\n            listUsers = <Spinner />\n            style = styles.Spinner;\n        }\n        return (\n\n            <div className={style}>\n                <ul>\n                    {listUsers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ListUsers;","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListUsers/ListUsers.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListCustomers/ListCustomers.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUsers.js",[],"/Users/markoarsovic/b2s/src/components/UI/Modal/Modal.js",[],"/Users/markoarsovic/b2s/src/components/UI/Backdrop/Backdrop.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUser/EditUser.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/AddUser/AddUser.js",[],"/Users/markoarsovic/b2s/src/hoc/AccountLayout/Layout.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/AddUSer/AddUser.js",["165"],"import React, { Component } from \"react\";\nimport axios from 'axios';\nimport crypto from \"crypto\";\n\nimport Input from \"../../../../../../components/UI/Input/Input\"\nimport Button from \"../../../../../../components/UI/Button/Button\"\n\nclass AddUser extends Component {\n\n    state = {\n        orderForm: {\n            username: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"userName\",\n                    placeholder: \"Nom d'utilisateur\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            street: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"street\",\n                    placeholder: \"Rue\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            city: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"city\",\n                    placeholder: \"Ville\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            right: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'client', displayValue: 'Client' },\n                        { value: 'batisphere', displayValue: 'Batisphere' },\n                        { value: 'admin', displayValue: 'Administrateur' }\n                    ]\n                },\n                value: 'client',\n                validation: {},\n                valid: true\n            }\n        },\n        loading: true,\n        modify: false,\n        errorMessage: \"\",\n        successMessage: \"\",\n        formIsValid: false,\n        canBedAdded: false\n    }\n\n    requestAdd = (event) => {\n        event.preventDefault();\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                \"X-Parse-Session-Token\": sessionStorage.getItem(\"token\")\n            }\n        };\n\n        //Returns the names of supported hash algorithms\n        const hash = crypto.getHashes();\n\n        const url = \"https://parseapi.back4app.com/users\";\n        const user = {\n            username: this.state.orderForm.username.value,\n            email: this.state.orderForm.username.value.concat(\"@\", this.state.orderForm.right.value, \".fr\"),\n            street: this.state.orderForm.street.value,\n            city: this.state.orderForm.city.value,\n            password: crypto.createHash('sha1').update(this.state.orderForm.username.value).digest('hex'),\n            right: this.state.orderForm.right.value\n        }\n\n        if (this.checkUnicity(user.username) === true && this.state.formIsValid === true) {\n            console.log(\"yolo\")\n\n            // Requete de création de compte\n            axios\n                .post(url, user, options)\n                .then((res) => {\n                    this.setState({\n                        loading: false,\n                        errorMessage: \"\",\n                        successMessage: \"Utilisateur crée avec succès\"\n                    });\n                })\n                .catch((err) => {\n                    this.setState({\n                        loading: false,\n                        errorMessage: \"Echec. \".concat(err.response.data.error),\n                        successMessage: \"\"\n                    });\n                });\n\n            // Requete de changement de mot de passe\n            if (this.state.errorMessage.trim() === \"\") {\n                let urlToResetPassword = \"https://parseapi.back4app.com/requestPasswordReset\"\n                const userEmail = {\n                    \"email\" : user.email\n                }\n                axios\n                    .post(urlToResetPassword, userEmail , options)\n                    .then((res) => {\n                        console.log(res)\n                        this.setState({\n                            loading: false,\n                            errorMessage: \"\",\n                            successMessage: \"Utilisateur crée avec succès\"\n                        });\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                        this.setState({\n                            loading: false,\n                            errorMessage: \"Echec.\".concat(err.response.data.error),\n                            successMessage: \"\"\n                        });\n                    });\n            }\n        }\n    }\n\n    checkUnicity(username) {\n        let valid = true;\n        let listUser = null;\n\n        const url = \"https://parseapi.back4app.com/users\";\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                listUser = res.data.results;\n                for (let elem in listUser) {\n                    valid = username !== listUser[elem].username && valid\n                }\n                this.setState({ loading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n\n            if(valid) {\n                console.log(\"unique\")\n            }\n\n        return valid;\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n        let form = (\n            <div>\n                <h2> Ajout d'un utilisateur</h2>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n\n                <div>\n                    <div> {this.state.errorMessage}</div>\n                    <div style={{ color: \"green\" }}> {this.state.successMessage}</div>\n                </div>\n\n                <Button\n                    btnType=\"Success\"\n                    value=\"Submit\"\n                    disabled={!this.state.formIsValid}\n                    clicked={this.requestAdd}> Création </Button>\n            </div>\n        );\n\n\n        return (\n            <div >\n                {form}\n            </div>\n        )\n    }\n}\n\nexport default AddUser;",["166","167"],"/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/SecondNavigationItems.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Client/Charts/Chart1.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Client/Advices/Advices.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Client/Advices/Advice/Advice.js",[],"/Users/markoarsovic/b2s/src/components/CSV/processingCSV.js",[],"/Users/markoarsovic/b2s/src/components/FormCircuits/FormCircuits.js",["168","169"],"/Users/markoarsovic/b2s/src/components/FormCircuits/Rooms/Rooms.js",["170","171"],"import React, { Component } from \"react\";\n\nimport Button from \"../../UI/Button/Button\"\nimport Input from \"../../UI/Input/Input\"\nimport styles from \"./Rooms.module.css\"\n\n\nconst PhysicList = [\n    { \"Temperature\": \"T\" }\n]\n\nclass Rooms extends Component {\n    state = {\n        circuits: this.props.circuits,\n        rooms: this.props.rooms,\n        loading: true,\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // Deleting Selectionned circuits from the list of rooms\n        var roomsWithoutCircuit = this.state.rooms;\n        var toDelete = [];\n\n        for (let room in this.state.rooms) {\n            for (let elem in this.state.circuits) {\n                if (this.state.circuits[elem] === roomsWithoutCircuit[room].name) {\n                    toDelete.push(room)\n                }\n            }\n        }\n\n        for (let roomToDelete in toDelete.reverse()) {\n            roomsWithoutCircuit.splice(toDelete[roomToDelete], 1);\n        }\n\n        let circuitForRooms = [];\n        const roomsOnPageCircuit = document.getElementsByName('roomForCircuits');\n        for (let key in this.state.rooms) {\n            circuitForRooms.push(roomsOnPageCircuit[key].value)\n        }\n\n        let physicForRooms = [];\n        const roomsOnPageCPhysic = document.getElementsByName('roomForPhysic');\n        for (let key in this.state.rooms) {\n            physicForRooms.push(roomsOnPageCPhysic[key].value.charAt(0))\n        }\n\n        this.props.handleRooms(true, roomsWithoutCircuit, circuitForRooms, physicForRooms);\n    }\n\n    render() {\n\n        // Deleting Selectionned circuits from the list of rooms\n        var roomsWithoutCircuit = this.state.rooms;\n        var toDelete = [];\n\n        for (let room in this.state.rooms) {\n            for (let elem in this.state.circuits) {\n                if (this.state.circuits[elem] === roomsWithoutCircuit[room].name) {\n                    toDelete.push(room)\n                }\n            }\n        }\n\n        for (let roomToDelete in toDelete.reverse()) {\n            roomsWithoutCircuit.splice(toDelete[roomToDelete], 1);\n        }\n\n        // Printing the list of rooms\n        const toShow = roomsWithoutCircuit.map(room => {\n            return (\n                <li>\n                    <div className={styles.Label}>\n                        <label for={room['name']} className={styles.Label}> <span>{room['name']} </span></label>\n                    </div>\n                    {/* DROPDOWN FOR CIRCUITS*/}\n                    <div className={styles.Select1}>\n                        <select id={room['name']} name=\"roomForCircuits\" >\n                            {this.state.circuits.map(circuit => {\n                                return <option value={circuit}> {circuit} </option>\n                            })}\n                        </select>\n                    </div>\n                    <div className={styles.Select1}>\n                        {/* DROPDOWN FOR PHYSIC*/}\n                        <select id={room['name']} name=\"roomForPhysic\">\n                            {PhysicList.map(physic => {\n                                return <option value={Object.keys(physic)[1]}> {Object.keys(physic)[0]} </option>\n                            })}\n                        </select>\n                    </div>\n                </li>\n            )\n        })\n\n        return (\n            <div className={styles.Rooms}>\n                <h1> Paramétrages des Pièces</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {toShow}\n                </form>\n                <button type=\"submit\" onClick={this.handleSubmit}>Suivant</button>\n            </div>\n        )\n\n    }\n}\n\nexport default Rooms;\n",["172","173"],"/Users/markoarsovic/b2s/src/components/FormCircuits/Circuits/Circuits.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":48,"column":77,"nodeType":"180","messageId":"181","endLine":48,"endColumn":79},{"ruleId":"178","severity":1,"message":"179","line":46,"column":77,"nodeType":"180","messageId":"181","endLine":46,"endColumn":79},{"ruleId":"182","severity":1,"message":"183","line":85,"column":15,"nodeType":"184","messageId":"185","endLine":85,"endColumn":19},{"ruleId":"174","replacedBy":"186"},{"ruleId":"176","replacedBy":"187"},{"ruleId":"182","severity":1,"message":"188","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":13},{"ruleId":"182","severity":1,"message":"188","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":13},{"ruleId":"174","replacedBy":"190"},{"ruleId":"176","replacedBy":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'hash' is assigned a value but never used.","Identifier","unusedVar",["192"],["193"],"'Button' is defined but never used.","'Input' is defined but never used.",["192"],["193"],"no-global-assign","no-unsafe-negation"]