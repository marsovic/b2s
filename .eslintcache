[{"/Users/markoarsovic/b2s/src/containers/Connection/Connection.js":"1","/Users/markoarsovic/b2s/src/components/UI/Spinner/Spinner.js":"2","/Users/markoarsovic/b2s/src/components/MyAccount/Logout/Logout.js":"3","/Users/markoarsovic/b2s/src/components/UI/Button/Button.js":"4","/Users/markoarsovic/b2s/src/components/UI/Input/Input.js":"5","/Users/markoarsovic/b2s/src/components/MyAccount/MyAccount.js":"6","/Users/markoarsovic/b2s/src/containers/Account/Batisphere/Account.js":"7","/Users/markoarsovic/b2s/src/containers/Account/Admin/Account.js":"8","/Users/markoarsovic/b2s/src/containers/Account/Client/Account.js":"9","/Users/markoarsovic/b2s/src/components/Auth/Client/Auth.js":"10","/Users/markoarsovic/b2s/src/components/Auth/Others/Auth.js":"11","/Users/markoarsovic/b2s/src/App.js":"12","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItems.js":"13","/Users/markoarsovic/b2s/src/components/Navigation/Toolbar/Toolbar.js":"14","/Users/markoarsovic/b2s/src/index.js":"15","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"16","/Users/markoarsovic/b2s/src/hoc/Layout/Layout.js":"17","/Users/markoarsovic/b2s/src/hoc/AccountLayout/Layout.js":"18","/Users/markoarsovic/b2s/src/components/Navigation/AccountToolbar/Toolbar.js":"19","/Users/markoarsovic/b2s/src/hoc/Aux/Aux.js":"20","/Users/markoarsovic/b2s/src/components/Users/ListUsers/Admin/ListUsers.js":"21","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/InternalNavigationItems.js":"22","/Users/markoarsovic/b2s/src/components/Users/ListUsers/Batiphere/ListUsers.js":"23","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListUsers/ListUsers.js":"24","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListCustomers/ListCustomers.js":"25","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUsers.js":"26","/Users/markoarsovic/b2s/src/components/UI/Modal/Modal.js":"27","/Users/markoarsovic/b2s/src/components/UI/Backdrop/Backdrop.js":"28"},{"size":4775,"mtime":1610966495362,"results":"29","hashOfConfig":"30"},{"size":226,"mtime":1610546822520,"results":"31","hashOfConfig":"30"},{"size":684,"mtime":1610900494665,"results":"32","hashOfConfig":"30"},{"size":316,"mtime":1610362353115,"results":"33","hashOfConfig":"30"},{"size":1708,"mtime":1610361813977,"results":"34","hashOfConfig":"30"},{"size":311,"mtime":1610626579914,"results":"35","hashOfConfig":"30"},{"size":489,"mtime":1610551156803,"results":"36","hashOfConfig":"30"},{"size":1263,"mtime":1610637253511,"results":"37","hashOfConfig":"30"},{"size":489,"mtime":1610551161501,"results":"38","hashOfConfig":"30"},{"size":5841,"mtime":1610966472203,"results":"39","hashOfConfig":"30"},{"size":6481,"mtime":1610966485348,"results":"40","hashOfConfig":"30"},{"size":895,"mtime":1610718241449,"results":"41","hashOfConfig":"30"},{"size":488,"mtime":1610551868372,"results":"42","hashOfConfig":"30"},{"size":688,"mtime":1610530168264,"results":"43","hashOfConfig":"30"},{"size":262,"mtime":1610375198875,"results":"44","hashOfConfig":"30"},{"size":408,"mtime":1610319521080,"results":"45","hashOfConfig":"30"},{"size":448,"mtime":1610551352213,"results":"46","hashOfConfig":"30"},{"size":455,"mtime":1610551541887,"results":"47","hashOfConfig":"30"},{"size":347,"mtime":1610877608910,"results":"48","hashOfConfig":"30"},{"size":61,"mtime":1610018977408,"results":"49","hashOfConfig":"30"},{"size":2522,"mtime":1610966511852,"results":"50","hashOfConfig":"30"},{"size":720,"mtime":1610877616869,"results":"51","hashOfConfig":"30"},{"size":2167,"mtime":1610966506726,"results":"52","hashOfConfig":"30"},{"size":345,"mtime":1610637085187,"results":"53","hashOfConfig":"30"},{"size":364,"mtime":1610897893822,"results":"54","hashOfConfig":"30"},{"size":921,"mtime":1610910308108,"results":"55","hashOfConfig":"30"},{"size":738,"mtime":1610910096889,"results":"56","hashOfConfig":"30"},{"size":220,"mtime":1610014250636,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"5fzxdm",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"/Users/markoarsovic/b2s/src/containers/Connection/Connection.js",["120"],"import React, { Component } from \"react\";\nimport axios from 'axios';\n\nimport AuthClient from \"../../components/Auth/Client/Auth\";\nimport AuthOthers from \"../../components/Auth/Others/Auth\";\nimport AccountClient from \"../Account/Client/Account\";\nimport AccountAdmin from \"../Account/Admin/Account\";\nimport AccountBatisphere from \"../Account/Batisphere/Account\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\n\nclass Connection extends Component {\n    state = {\n        isUserLogged: false,\n        authData: {\n            email: \"\",\n            password: \"\"\n        },\n        errorMessage: \"\",\n        mode: \"\",\n        loading: true\n    }\n\n    // Verification Ã  chaque render du stockage de session\n    componentWillMount() {\n        this.setState({ isUserLogged: Boolean(sessionStorage.getItem(\"isUserLogged\")) });\n\n    }\n\n    loggedHandler = (loginState, userMode) => {\n        this.setState({ isUserLogged: Boolean(loginState), mode: userMode })\n\n    }\n\n    componentDidMount() {\n        if (sessionStorage.getItem(\"token\") !== null) {\n            this.setState({ loading: true });\n\n            const userData = {\n                idToken: sessionStorage.getItem(\"token\")\n            }\n\n            // X-Parse-Session-Token: \n            const options = {\n                headers: {\n                    \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                    \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                    \"X-Parse-Session-Token\": sessionStorage.getItem(\"token\")\n                }\n            };\n            \n            axios\n                .get(\"https://parseapi.back4app.com/users/me\", options)\n                .then((res) => {\n                    this.setState({ loading: false });;\n                    this.setState({ mode: res.data.right })\n                })\n                .catch((err) => {\n                    console.log(err);\n                    this.setState({ loading: false });;\n                });\n        } else {\n            console.log(\"coucou\");\n            this.setState({mode:\"\", isUserLogged: false, loading: false})\n        }\n    }\n\n    render() {\n        if (this.state.loading === false) {\n            // Recuperation de la premiere valeur dans l'URL apres le /\n            let pathArray = window.location.pathname.split('/');\n            let secondLevelLocation = pathArray[1];\n\n            let containerShowed = null;\n\n            if (this.state.isUserLogged === true) {\n                if (this.state.mode === \"client\" && secondLevelLocation === \"home\") {\n                    containerShowed =\n                        <AccountClient\n                            spec1={this.props.spec1}\n                            spec2={this.props.spec2}\n                            mode={this.state.mode}\n                            login={this.loggedHandler} />;\n                }\n\n                if (this.state.mode === \"admin\" && secondLevelLocation === \"internal\") {\n                    containerShowed =\n                        <AccountAdmin\n                            spec1={this.props.spec1}\n                            spec2={this.props.spec2}\n                            mode={this.state.mode}\n                            login={this.loggedHandler} />;\n                }\n\n                if (this.state.mode === \"batisphere\" && secondLevelLocation === \"internal\") {\n                    containerShowed =\n                        <AccountBatisphere\n                            spec1={this.props.spec1}\n                            spec2={this.props.spec2}\n                            mode={this.state.mode}\n                            login={this.loggedHandler} />;\n                }\n            }\n            else {\n                if (secondLevelLocation === \"home\") {\n                    containerShowed = <div>\n                        <AuthClient login={this.loggedHandler} mode=\"connection\" />\n                        <AuthClient login={this.loggedHandler} mode=\"signIn\" />\n                    </div>\n                }\n\n                if (secondLevelLocation === \"internal\") {\n                    containerShowed = <div>\n                        <AuthOthers login={this.loggedHandler} mode=\"connection\" />\n                        <AuthOthers login={this.loggedHandler} mode=\"signIn\" />\n                    </div>\n                }\n\n            }\n\n            if (containerShowed === null) {\n                containerShowed = <p>Erreur. Retournez Ã  la page d'accueil.</p>\n            }\n\n            return (\n                <div>\n                    {containerShowed}\n                </div>\n            );\n        } else {\n\n            return (\n                <div>\n                    <Spinner />\n                </div>\n            );\n        }\n    }\n}\n\nexport default Connection;",["121","122"],"/Users/markoarsovic/b2s/src/components/UI/Spinner/Spinner.js",[],"/Users/markoarsovic/b2s/src/components/MyAccount/Logout/Logout.js",[],"/Users/markoarsovic/b2s/src/components/UI/Button/Button.js",[],"/Users/markoarsovic/b2s/src/components/UI/Input/Input.js",[],"/Users/markoarsovic/b2s/src/components/MyAccount/MyAccount.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Batisphere/Account.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Account.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Client/Account.js",[],"/Users/markoarsovic/b2s/src/components/Auth/Client/Auth.js",[],"/Users/markoarsovic/b2s/src/components/Auth/Others/Auth.js",["123"],"import React, { Component } from \"react\";\nimport axios from 'axios';\n\nimport Input from \"../../UI/Input/Input\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"../Auth.module.css\";\nimport Spinner from \"../../UI/Spinner/Spinner\";\n\nclass AuthOthers extends Component {\n    state = {\n        controls: {\n            userName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'userName',\n                    placeholder: \"Nom d'utilisateur\"\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Mot de passe'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }/*, \n            right: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: '@admin', displayValue: 'Administrateur' },\n                        { value: '@batisphere', displayValue: 'Batisphere' },\n                        { value: '@client', displayValue: 'Client' }\n                    ]\n                },\n                value: 'client',\n                validation: {},\n                valid: true\n            }*/\n        },\n        loading: false,\n        errorMessage: \"\"\n    }\n\n    getDataFire = (event) => {\n\n        // Interdire le rechargement de la page \n        event.preventDefault();\n\n        // Propre Ã  firebase ces 3 paramÃ¨tres\n        const authData = {\n            email: this.state.controls.userName.value,\n            password: this.state.controls.password.value,\n            returnSecureToken: true\n        }\n\n        //lancement Spinnner\n        this.setState({ loading: true });\n\n        // Separation du 'admin' de '[nom]@admin.com'\n        const userMode = this.state.controls.userName.value.split(\"@\")[1].slice(0, -4);\n        // Requete de connexion\n\n        let user = null;\n\n        let url = \"\";\n        if (this.props.mode === \"connection\") {\n            url = \"https://parseapi.back4app.com/login\";\n            user = {\n                username: this.state.controls.userName.value.split(\"@\")[0],\n                password: this.state.controls.password.value,\n            }\n        }\n\n        if (this.props.mode === \"signIn\") {\n            url = \"https://parseapi.back4app.com/users\";\n            user = {\n                username: this.state.controls.userName.value.split(\"@\")[0],\n                email: this.state.controls.userName.value,\n                password: this.state.controls.password.value,\n                right: \"client\"\n            }\n        }\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\":  process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .post(url, user, options)\n            .then((res) => {\n                console.log(res.data.sessionToken);\n                sessionStorage.setItem(\"isUserLogged\", true);\n                sessionStorage.setItem(\"token\", res.data.sessionToken);\n                sessionStorage.setItem(\"objectId\", res.data.objectId);\n\n                this.setState({ loading: false, errorMessage: \"\" });\n                this.props.login(true, userMode);\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n                this.setState({ errorMessage: \"Email ou mot de passe invalide\" });\n                this.props.login(false, userMode);\n            });\n        \n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName]),\n                touched: true\n            }\n        };\n        this.setState({ controls: updatedControls });\n    }\n\n    // ValiditÃ© des parametres\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            })\n        }\n\n        const form = formElementsArray.map(formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n        ))\n\n        let mode = \"\";\n\n        if(this.props.mode === \"connection\") {\n            mode = \"Connexion\"\n        } else {\n            mode = \"Inscription\"\n        }\n\n        return (\n            <div className={styles.Auth}>\n                {\n                    this.state.loading ? <Spinner /> :\n                    <div>\n                        <p style={{textTransform: \"capitalize\"}}> {mode} </p>\n                        <form onSubmit={this.getDataFire}>\n                            {form}\n                            <p style={{ color: \"red\" }}><strong>{this.state.errorMessage}</strong></p>\n                            <Button btnType=\"Success\">Se connecter</Button>\n                        </form>\n                    </div>\n                }\n            </div>\n        )\n\n    }\n}\n\nexport default AuthOthers;","/Users/markoarsovic/b2s/src/App.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItems.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/markoarsovic/b2s/src/index.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/Users/markoarsovic/b2s/src/hoc/Layout/Layout.js",[],"/Users/markoarsovic/b2s/src/hoc/AccountLayout/Layout.js",[],"/Users/markoarsovic/b2s/src/components/Navigation/AccountToolbar/Toolbar.js",[],"/Users/markoarsovic/b2s/src/hoc/Aux/Aux.js",[],"/Users/markoarsovic/b2s/src/components/Users/ListUsers/Admin/ListUsers.js",["124"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Spinner from \"../../../UI/Spinner/Spinner\";\nimport styles from '../Users.module.css';\n\nclass ListUsers extends Component {\n\n    state = {\n            loading: true,\n            users: null\n        }\n    \n\n    componentDidMount() {\n        let url = \"https://parseapi.back4app.com/users\";\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\":  process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                this.setState({ users: res.data.results, loading: false })\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        \n        let listUsers = null;\n        let style = \"\";\n\n        if (this.state.loading === false) {\n            if (this.state.users !== null) {\n                style = styles.List;\n                listUsers = Object.keys(this.state.users)\n                    .map(key => {\n                        return [...Array(this.state.users[key])].map((_, i) => {\n                            if( this.state.users[key].right === \"admin\" ||\n                                this.state.users[key].right === \"client\" ||\n                                this.state.users[key].right === \"admin\")\n                                return (\n                                    <li key={key + 1} onClick={(event) => {\n                                        event.preventDefault()\n                                        this.props.modal(true, this.state.users[key]) \n                                    }\n                                    }>\n                                        <p>{this.state.users[key].username}</p>\n                                        <p> {this.state.users[key].right}</p>\n                                    </li>\n                                )\n                        })\n                    })\n            }\n        } else {\n            listUsers = <Spinner />\n            style = styles.Spinner;\n        }\n        return (\n            <div className={style}>\n                <ul>\n                    {listUsers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ListUsers;","/Users/markoarsovic/b2s/src/components/Navigation/NavigationItems/InternalNavigationItems.js",[],"/Users/markoarsovic/b2s/src/components/Users/ListUsers/Batiphere/ListUsers.js",["125"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Spinner from \"../../../UI/Spinner/Spinner\";\nimport styles from '../Users.module.css';\n\nclass ListUsers extends Component {\n    state = {\n        loading: true,\n        users: null\n    }\n\n    componentDidMount() {\n        let url = \"https://parseapi.back4app.com/users\";\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\":  process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                this.setState({ users: res.data.results, loading: false })\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n\n        let listUsers = null;\n        let style = \"\";\n\n        if (this.state.loading === false) {\n            if (this.state.users !== null) {\n                style = styles.List;\n                listUsers = Object.keys(this.state.users)\n                    .map(key => {\n                        return [...Array(this.state.users[key])].map((_, i) => {\n                            if (this.state.users[key].right === \"client\") { // Affichage uniquement des clients\n                                return (\n                                    <li key={key + 1}>\n                                        <p>{this.state.users[key].username}</p>\n                                        <p> {this.state.users[key].right}</p>\n                                    </li>\n                                )\n                            }\n                        })\n                    })\n            }\n        } else {\n            listUsers = <Spinner />\n            style = styles.Spinner;\n        }\n        return (\n\n            <div className={style}>\n                <ul>\n                    {listUsers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ListUsers;","/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListUsers/ListUsers.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/ListCustomers/ListCustomers.js",[],"/Users/markoarsovic/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUsers.js",[],"/Users/markoarsovic/b2s/src/components/UI/Modal/Modal.js",[],"/Users/markoarsovic/b2s/src/components/UI/Backdrop/Backdrop.js",[],["126","127"],{"ruleId":"128","severity":1,"message":"129","line":39,"column":19,"nodeType":"130","messageId":"131","endLine":39,"endColumn":27},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":63,"column":15,"nodeType":"130","messageId":"131","endLine":63,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":48,"column":77,"nodeType":"139","messageId":"140","endLine":48,"endColumn":79},{"ruleId":"137","severity":1,"message":"138","line":46,"column":77,"nodeType":"139","messageId":"140","endLine":46,"endColumn":79},{"ruleId":"132","replacedBy":"141"},{"ruleId":"134","replacedBy":"142"},"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'authData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["143"],["144"],"no-global-assign","no-unsafe-negation"]