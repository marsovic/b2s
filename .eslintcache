[{"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Account.js":"1","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUser/EditUser.js":"2","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/CSV/processingCSV.js":"3","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/index.js":"4","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/App.js":"5","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Connection/Connection.js":"6","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/hoc/Layout/Layout.js":"7","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Account.js":"8","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Batisphere/Account.js":"9","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/hoc/Aux/Aux.js":"10","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/hoc/AccountLayout/Layout.js":"11","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/MyAccount/Logout/Logout.js":"12","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/Toolbar/Toolbar.js":"13","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Spinner/Spinner.js":"14","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Auth/Others/Auth.js":"15","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Auth/Client/Auth.js":"16","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/MyAccount/MyAccount.js":"17","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/ListCustomers/ListCustomers.js":"18","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUsers.js":"19","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/ListUsers/ListUsers.js":"20","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Charts/Chart1.js":"21","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Advices/Advices.js":"22","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/NavigationItems/NavigationItems.js":"23","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Button/Button.js":"24","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Input/Input.js":"25","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/AccountToolbar/Toolbar.js":"26","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Modal/Modal.js":"27","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/EditUsers/AddUser/AddUser.js":"28","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Users/ListUsers/Batiphere/ListUsers.js":"29","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Users/ListUsers/Admin/ListUsers.js":"30","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/NavigationItems/SecondNavigationItems.js":"31","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Advices/Advice/Advice.js":"32","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"33","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Backdrop/Backdrop.js":"34","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/LinearChart/LinearChart.js":"35","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/ChartSettings/LinearChartSettings.js":"36","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/LayoutComponent/SettingsTable.js":"37","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/LayoutComponent/DropDownColors.js":"38"},{"size":1643,"mtime":1611754830000,"results":"39","hashOfConfig":"40"},{"size":6866,"mtime":1611669180339,"results":"41","hashOfConfig":"40"},{"size":3259,"mtime":1612041161172,"results":"42","hashOfConfig":"40"},{"size":341,"mtime":1611670768031,"results":"43","hashOfConfig":"40"},{"size":895,"mtime":1611238190829,"results":"44","hashOfConfig":"40"},{"size":4671,"mtime":1611670768031,"results":"45","hashOfConfig":"40"},{"size":448,"mtime":1611238190845,"results":"46","hashOfConfig":"40"},{"size":1334,"mtime":1611672135497,"results":"47","hashOfConfig":"40"},{"size":1355,"mtime":1611520307135,"results":"48","hashOfConfig":"40"},{"size":61,"mtime":1610454020858,"results":"49","hashOfConfig":"40"},{"size":448,"mtime":1611520307137,"results":"50","hashOfConfig":"40"},{"size":684,"mtime":1611238190830,"results":"51","hashOfConfig":"40"},{"size":688,"mtime":1611238190834,"results":"52","hashOfConfig":"40"},{"size":226,"mtime":1611238190837,"results":"53","hashOfConfig":"40"},{"size":6250,"mtime":1611238190833,"results":"54","hashOfConfig":"40"},{"size":5841,"mtime":1611238190829,"results":"55","hashOfConfig":"40"},{"size":424,"mtime":1611668996456,"results":"56","hashOfConfig":"40"},{"size":386,"mtime":1611238190842,"results":"57","hashOfConfig":"40"},{"size":3544,"mtime":1612041227608,"results":"58","hashOfConfig":"40"},{"size":367,"mtime":1611238190843,"results":"59","hashOfConfig":"40"},{"size":954,"mtime":1611520307138,"results":"60","hashOfConfig":"40"},{"size":465,"mtime":1611520307136,"results":"61","hashOfConfig":"40"},{"size":488,"mtime":1611238190834,"results":"62","hashOfConfig":"40"},{"size":316,"mtime":1610454020855,"results":"63","hashOfConfig":"40"},{"size":1708,"mtime":1610454020856,"results":"64","hashOfConfig":"40"},{"size":332,"mtime":1611520307130,"results":"65","hashOfConfig":"40"},{"size":738,"mtime":1611238190838,"results":"66","hashOfConfig":"40"},{"size":8706,"mtime":1611520307133,"results":"67","hashOfConfig":"40"},{"size":2167,"mtime":1611238190840,"results":"68","hashOfConfig":"40"},{"size":3061,"mtime":1611520307133,"results":"69","hashOfConfig":"40"},{"size":1376,"mtime":1611520307133,"results":"70","hashOfConfig":"40"},{"size":302,"mtime":1612039374197,"results":"71","hashOfConfig":"40"},{"size":408,"mtime":1610454020850,"results":"72","hashOfConfig":"40"},{"size":220,"mtime":1610454020854,"results":"73","hashOfConfig":"40"},{"size":14978,"mtime":1612040358522,"results":"74","hashOfConfig":"40"},{"size":1682,"mtime":1612042336922,"results":"75","hashOfConfig":"40"},{"size":4592,"mtime":1612037098847,"results":"76","hashOfConfig":"40"},{"size":4672,"mtime":1612042298943,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"3rgwge",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Account.js",["162"],"import React, { Component } from \"react\";\nimport CSV from '../../../components/CSV/processingCSV'\nimport Logout from \"../../../components/MyAccount/Logout/Logout\";\nimport MyAccount from \"../../../components/MyAccount/MyAccount\";\nimport Chart1 from \"./Charts/Chart1\"\nimport Advices from \"./Advices/Advices\";\n\n\n// Page affichée lorsqu'on est connecté  en tant que client\nclass Account extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          dataObtained: false,\n          columnsName : null,\n          data : null,\n        };\n    \n    this.loadData = this.loadData.bind(this);\n\n    }\n\n    loadData(data1, data2) {\n        //console.log(data1); // Show the names of the columns\n        //console.log(data2); // Show data on each row \n        this.setState({\n            dataObtained: true,\n            columnsName : data1,\n            data : data2,\n          });\n    }\n\n    render() {\n        if(this.state.dataObtained === true){\n            return (\n                <div style={{paddingTop: \"52px\"}}>\n                    <MyAccount mode={this.props.mode}/>\n                    <Advices />\n                    <Logout loginOut={this.props.login}/>\n                </div>\n            );\n        }\n\n        else {\n\n            return (\n                <div style={{paddingTop: \"52px\"}}>\n                    <MyAccount mode={this.props.mode}/>\n                    <Advices />\n                    <CSV sendJSON={this.loadData}/>\n                    <Logout loginOut={this.props.login}/>\n                </div>\n                \n            );\n        }\n        \n        \n    }\n}\n\nexport default Account;",["163","164"],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUser/EditUser.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/CSV/processingCSV.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/index.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/App.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Connection/Connection.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/hoc/Layout/Layout.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Account.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Batisphere/Account.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/hoc/Aux/Aux.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/hoc/AccountLayout/Layout.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/MyAccount/Logout/Logout.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/Toolbar/Toolbar.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Spinner/Spinner.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Auth/Others/Auth.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Auth/Client/Auth.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/MyAccount/MyAccount.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/ListCustomers/ListCustomers.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/EditUsers/EditUsers.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/ListUsers/ListUsers.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Charts/Chart1.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Advices/Advices.js",["165"],"import React, { Component } from \"react\";\n\nimport style from \"./Advices.module.css\"\nimport Aux from \"../../../../hoc/Aux/Aux\"\nimport Advice from \"./Advice/Advice\";\n\nclass Advices extends Component {\n\n    render() {\n        return(\n            <div className={style.Advices}>\n                <h2> Conseils </h2>\n                <Advice advice=\"- fais ci\" />\n                <Advice advice=\"- fais ça\" />\n            </div>\n        )\n    }\n}\n\nexport default Advices;","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/NavigationItems/NavigationItems.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Button/Button.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Input/Input.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/AccountToolbar/Toolbar.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Modal/Modal.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Actions/EditUsers/AddUser/AddUser.js",["166"],"import React, { Component } from \"react\";\nimport axios from 'axios';\nimport crypto from \"crypto\";\n\nimport Input from \"../../../../../../components/UI/Input/Input\"\nimport Button from \"../../../../../../components/UI/Button/Button\"\n\nclass AddUser extends Component {\n\n    state = {\n        orderForm: {\n            username: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"userName\",\n                    placeholder: \"Nom d'utilisateur\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            street: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"street\",\n                    placeholder: \"Rue\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            city: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"city\",\n                    placeholder: \"Ville\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            right: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'client', displayValue: 'Client' },\n                        { value: 'batisphere', displayValue: 'Batisphere' },\n                        { value: 'admin', displayValue: 'Administrateur' }\n                    ]\n                },\n                value: 'client',\n                validation: {},\n                valid: true\n            }\n        },\n        loading: true,\n        modify: false,\n        errorMessage: \"\",\n        successMessage: \"\",\n        formIsValid: false,\n        canBedAdded: false\n    }\n\n    requestAdd = (event) => {\n        event.preventDefault();\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                \"X-Parse-Session-Token\": sessionStorage.getItem(\"token\")\n            }\n        };\n\n        //Returns the names of supported hash algorithms\n        const hash = crypto.getHashes();\n\n        const url = \"https://parseapi.back4app.com/users\";\n        const user = {\n            username: this.state.orderForm.username.value,\n            email: this.state.orderForm.username.value.concat(\"@\", this.state.orderForm.right.value, \".fr\"),\n            street: this.state.orderForm.street.value,\n            city: this.state.orderForm.city.value,\n            password: crypto.createHash('sha1').update(this.state.orderForm.username.value).digest('hex'),\n            right: this.state.orderForm.right.value\n        }\n\n        if (this.checkUnicity(user.username) === true && this.state.formIsValid === true) {\n            console.log(\"yolo\")\n\n            // Requete de création de compte\n            axios\n                .post(url, user, options)\n                .then((res) => {\n                    this.setState({\n                        loading: false,\n                        errorMessage: \"\",\n                        successMessage: \"Utilisateur crée avec succès\"\n                    });\n                })\n                .catch((err) => {\n                    this.setState({\n                        loading: false,\n                        errorMessage: \"Echec. \".concat(err.response.data.error),\n                        successMessage: \"\"\n                    });\n                });\n\n            // Requete de changement de mot de passe\n            if (this.state.errorMessage.trim() === \"\") {\n                let urlToResetPassword = \"https://parseapi.back4app.com/requestPasswordReset\"\n                const userEmail = {\n                    \"email\" : user.email\n                }\n                axios\n                    .post(urlToResetPassword, userEmail , options)\n                    .then((res) => {\n                        console.log(res)\n                        this.setState({\n                            loading: false,\n                            errorMessage: \"\",\n                            successMessage: \"Utilisateur crée avec succès\"\n                        });\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                        this.setState({\n                            loading: false,\n                            errorMessage: \"Echec.\".concat(err.response.data.error),\n                            successMessage: \"\"\n                        });\n                    });\n            }\n        }\n    }\n\n    checkUnicity(username) {\n        let valid = true;\n        let listUser = null;\n\n        const url = \"https://parseapi.back4app.com/users\";\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                listUser = res.data.results;\n                for (let elem in listUser) {\n                    valid = username !== listUser[elem].username && valid\n                }\n                this.setState({ loading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n\n            if(valid) {\n                console.log(\"unique\")\n            }\n\n        return valid;\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        };\n\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n        let form = (\n            <div>\n                <h2> Ajout d'un utilisateur</h2>\n                {formElementsArray.map(formElement => (\n                    <Input\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n\n                <div>\n                    <div> {this.state.errorMessage}</div>\n                    <div style={{ color: \"green\" }}> {this.state.successMessage}</div>\n                </div>\n\n                <Button\n                    btnType=\"Success\"\n                    value=\"Submit\"\n                    disabled={!this.state.formIsValid}\n                    clicked={this.requestAdd}> Création </Button>\n            </div>\n        );\n\n\n        return (\n            <div >\n                {form}\n            </div>\n        )\n    }\n}\n\nexport default AddUser;","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Users/ListUsers/Batiphere/ListUsers.js",["167"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Spinner from \"../../../UI/Spinner/Spinner\";\nimport styles from '../Users.module.css';\n\nclass ListUsers extends Component {\n    state = {\n        loading: true,\n        users: null\n    }\n\n    componentDidMount() {\n        let url = \"https://parseapi.back4app.com/users\";\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\":  process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                this.setState({ users: res.data.results, loading: false })\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n\n        let listUsers = null;\n        let style = \"\";\n\n        if (this.state.loading === false) {\n            if (this.state.users !== null) {\n                style = styles.List;\n                listUsers = Object.keys(this.state.users)\n                    .map(key => {\n                        return [...Array(this.state.users[key])].map((_, i) => {\n                            if (this.state.users[key].right === \"client\") { // Affichage uniquement des clients\n                                return (\n                                    <li key={key + 1}>\n                                        <p>{this.state.users[key].username}</p>\n                                        <p> {this.state.users[key].right}</p>\n                                    </li>\n                                )\n                            }\n                        })\n                    })\n            }\n        } else {\n            listUsers = <Spinner />\n            style = styles.Spinner;\n        }\n        return (\n\n            <div className={style}>\n                <ul>\n                    {listUsers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ListUsers;","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Users/ListUsers/Admin/ListUsers.js",["168"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Spinner from \"../../../UI/Spinner/Spinner\";\nimport styles from '../Users.module.css';\n\nclass ListUsers extends Component {\n\n    state = {\n        loading: true,\n        users: null\n    }\n\n\n    componentDidMount() {\n        let url = \"https://parseapi.back4app.com/users\";\n\n        const options = {\n            headers: {\n                \"X-Parse-Application-Id\": process.env.REACT_APP_APP_ID,\n                \"X-Parse-REST-API-Key\": process.env.REACT_APP_API_KEY,\n                \"X-Parse-Revocable-Session\": 1,\n                \"Content-Type\": \"application/json\",\n            }\n        };\n\n        axios\n            .get(url, options)\n            .then((res) => {\n                this.setState({ users: res.data.results, loading: false })\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n\n        let listUsers = null;\n        let style = \"\";\n\n        if (this.state.loading === false) {\n            if (this.state.users !== null) {\n                style = styles.List;\n                listUsers = Object.keys(this.state.users)\n                    .map(key => {\n                        return [...Array(this.state.users[key])].map((_, i) => {\n                            if (this.state.users[key].right === \"batisphere\" ||\n                                this.state.users[key].right === \"client\" ||\n                                this.state.users[key].right === \"admin\") {\n                                if (this.props.spec === \"edit\") {\n                                    return (\n\n                                        <li key={key + 1} onClick={(event) => {\n                                            this.props.modal(true, this.state.users[key])\n                                        }\n                                        }>\n                                            <p>{this.state.users[key].username}</p>\n                                            <p> {this.state.users[key].right}</p>\n                                        </li>\n                                    )\n                                }\n                                if (this.props.spec === \"list\") {\n                                    return (\n                                        <li key={key + 1}>\n                                            <p>{this.state.users[key].username}</p>\n                                            <p> {this.state.users[key].right}</p>\n                                        </li>\n                                    )\n                                }\n                            }\n                        })\n                    })\n            }\n        } else {\n            listUsers = <Spinner />\n            style = styles.Spinner;\n        }\n        return (\n            <div className={style}>\n                <ul>\n                    {listUsers}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ListUsers;","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/NavigationItems/SecondNavigationItems.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Client/Advices/Advice/Advice.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/components/UI/Backdrop/Backdrop.js",[],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/LinearChart/LinearChart.js",["169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { Component,useState,PureComponent} from \"react\";\nimport {\n  Label, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceArea,Legend,ResponsiveContainer\n} from 'recharts';\n\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Settings from '../ChartSettings/LinearChartSettings';\nimport CSV from '../../../../../components/CSV/processingCSV';\nimport Colors from '../../../../../components/UI/colors'\n\n//import Data from '../data'\n\n//const data = Data.importCsv(\"/Users/louiscauquelin/Downloads/data.csv\");\n\n//const data = null;\n/*\nconst data = [\n    { name: 1, cost: 4.11, impression: 100 },\n    { name: 2, cost: 2.39, impression: 120 },\n    { name: 3, cost: 1.37, impression: 150 },\n    { name: 4, cost: 1.16, impression: 180 },\n    { name: 5, cost: 2.29, impression: 200 },\n    { name: 6, cost: 3, impression: 499 },\n    { name: 7, cost: 0.53, impression: 50 },\n    { name: 8, cost: 2.52, impression: 100 },\n    { name: 9, cost: 1.79, impression: 200 },\n    { name: 10, cost: 2.94, impression: 222},\n    { name: 11, cost: 4.3, impression: 210 },\n    { name: 12, cost: 4.41, impression: 300 },\n    { name: 13, cost: 2.1, impression: 50 },\n    { name: 14, cost: 8, impression: 190 },\n    { name: 15, cost: 0, impression: 300 },\n    { name: 16, cost: 9, impression: 400 },\n    { name: 17, cost: 3, impression: 200 },\n    { name: 18, cost: 2, impression: 50 },\n    { name: 19, cost: 3, impression: 100 },\n    { name: 20, cost: 7, impression: 100 }\n];*/\n\n\n\n//fonction pour zoom\n\nclass LinearChart extends Component{\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/nhpemhgs/';\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: this.props.data,\n        columns : this.props.columns,\n        displayedColumns : [],\n        keys : [],\n        maxLine: 150,\n        colors: Colors,\n\n\n        //VARIBALES ZOOM\n        /*left: 'dataMin',\n        right: 'dataMax',\n        refAreaLeft: '',\n        refAreaRight: '',\n        top: 'dataMax+1',\n        bottom: 'dataMin-1',\n        top2: 'dataMax+20',\n        bottom2: 'dataMin-20',\n        animation: true,\n        dropDownLeft : \"15 min\",\n        dropDownRight : \"1 mois\",*/\n\n        \n        //Variables pour otpions des graphiques\n    \n        //Distance pointillés grille\n        dashArrayXSpace : 3,\n        dashArrayYSpace : 3,\n        //dashArray : dashArrayXSpace.toString() + \" \" + dashArrayYSpace.toString(),\n        dashArray : \"3 3\",\n        //Longueur et largeur du graph\n        graphWidth : 900,\n        graphHeight : 400,\n        \n        //Nom axe abscisse (mettre le nom du keyword dans le tableau de données)\n        XAxisName : \"name\",\n        \n        //Nom axe ordonnée (mettre le nom du keyword dans le tableau de données)\n        YAxisName : \"\",\n        lines : null,\n      }\n\n      //Lines initialisation\n      this.state.lines = Object.keys(this.state.columns)\n      .map(key => {\n        console.log(\"BACK TO INITIALISATION\");\n\n          switch(parseInt(key)){\n              case 0:\n              console.log(\"case 0\", this.state.columns[key].name)\n              this.state.XAxisName = this.state.columns[key].name.toString()\n               \n              break;\n\n              case 1 :\n              break;\n\n              default:\n              /*console.log(\"this.state.columns[key].name = \")\n              console.log(this.state.columns[key].name)\n              console.log(\"cpt\")\n              console.log(key)*/\n\n              if(this.state.columns[key].name !== null){\n\n                let color;\n                let colorsCopy = this.state.colors;\n                let iterator = 0;\n                let found = false;\n                \n                while (iterator<colorsCopy.length && found === false)  {\n                    \n                    //console.log(\"iterator\", iterator)\n                    //console.log(\"Colors[iterator].used\", colorsCopy[iterator].used)\n                    if(colorsCopy[iterator].used === false){\n            \n                        colorsCopy[iterator].used = true;\n                        colorsCopy[iterator].line = this.state.columns[key].name;\n                        found = true;\n                        color = colorsCopy[iterator].code;\n                    }\n            \n                    iterator++;\n                }\n\n                this.state.displayedColumns.push({\"name\":this.state.columns[key].name.toString(), \"displayed\":true})\n                  return (\n                      <Line key={this.state.columns[key].name.toString()} type=\"natural\" dataKey={this.state.columns[key].name.toString()} stroke={color} dot={false} />\n                      )\n\n                this.state.colors = colorsCopy;\n              }\n\n              break;\n\n\n          }\n          \n      })\nthis.state.lines.splice(0,1);\n\nthis.updateDisplayedLines = this.updateDisplayedLines.bind(this);\nthis.changeColor = this.changeColor.bind(this);\n\n}\n\n\n/*\nzoom() {\n    let { refAreaLeft, refAreaRight, data } = this.state;\n\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\n    this.setState(() => ({\n        refAreaLeft: '',\n        refAreaRight: '',\n    }));\n    return;\n    }\n\n    // xAxis domain\n    if (refAreaLeft > refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n    // yAxis domain\n    const [bottom, top] = this.getAxisYDomain(refAreaLeft, refAreaRight, 'C', 1);\n    const [bottom2, top2] = this.getAxisYDomain(refAreaLeft, refAreaRight, 'D', 50);\n\n    this.setState(() => ({\n    refAreaLeft: '',\n    refAreaRight: '',\n    data: data.slice(),\n    left: refAreaLeft,\n    right: refAreaRight,\n    bottom,\n    top,\n    bottom2,\n    top2,\n    }));\n}\n\nzoomOut() {\n    const { data } = this.state;\n    this.setState(() => ({\n      data: data.slice(),\n      refAreaLeft: '',\n      refAreaRight: '',\n      left: 'dataMin',\n      right: 'dataMax',\n      top: 'dataMax+1',\n      bottom: 'dataMin',\n      top2: 'dataMax+50',\n      bottom2: 'dataMin+50',\n    }));\n\n\n    //A AJOUTER DANS LE RENDER\n\n                    onMouseDown={e => this.setState({ refAreaLeft: e.activeTooltipIndex })}\n                onMouseMove={e => this.state.refAreaLeft && this.setState({ refAreaRight: e.activeTooltipIndex })}\n                onMouseUp={this.zoom.bind(this)}\n\n\n     \n                    {\n                        (this.state.refAreaLeft && this.state.refAreaRight) ? (\n                        <ReferenceArea x1={this.state.refAreaLeft} x2={this.state.refAreaRight} strokeOpacity={0.3} />) : null\n                    }\n}*/\n\ndeleteColor(name){\n    let colorsCopy = this.state.colors;\n    let colorDeleted;\n    let tabLines = this.state.lines;\n    let secondLine = \"\";\n\n    for(let iterator in colorsCopy)\n    {\n        if(name === colorsCopy[iterator].line){\n            colorsCopy[iterator].used = false;\n            colorsCopy[iterator].line = \"\";\n            colorDeleted = colorsCopy[iterator].code;\n        }\n    }\n\n    for (let i in tabLines){\n        if(typeof(tabLines[i]) !== 'undefined'){\n        \n            if(tabLines[i].props.stroke === colorDeleted){\n                secondLine = tabLines[i].key;\n            }\n        }\n    }\n\n    if(secondLine !== \"\"){\n        for(let iterator in colorsCopy)\n        {\n            if(colorDeleted === colorsCopy[iterator].code){\n                colorsCopy[iterator].used = true;\n                colorsCopy[iterator].line = secondLine;\n            }\n        }\n    }\n\n\n    \n    this.setState({\n        colors: colorsCopy,\n        data: this.state.data.slice(),\n    });\n\n\n\n    console.log(\"color DELETE\", this.state.colors)\n\n\n}\n\ngenerateColor(name){\n\n    let color;\n    let colorsCopy = this.state.colors;\n    let iterator = 0;\n    let found = false;\n    \n    while (iterator<colorsCopy.length && found === false)  {\n        \n        console.log(\"iterator\", iterator)\n        console.log(\"Colors[iterator].used\", colorsCopy[iterator].used)\n        if(colorsCopy[iterator].used === false){\n\n            colorsCopy[iterator].used = true;\n            colorsCopy[iterator].line = name;\n            found = true;\n            color = colorsCopy[iterator].code;\n        }\n\n        iterator++;\n    }\n    this.setState({\n        colors: colorsCopy\n    });\nconsole.log(\"color CREATE\", this.state.colors)\n    return color;\n}\n\nchangeColor(lineName,color){\n    console.log(\"lines\",this.state.lines );\n    let tabLines = this.state.lines;\n    let colorsCopy = this.state.colors;\n    let colorCode = \"#fa4d56\"; //couleur par défaut est rouge\n    //let tochange = false;\n\n    //On cherche \n    for(let iterator in colorsCopy)\n    {\n       /* console.log(\"lineName\",lineName );\n        console.log(\"colorsCopy[iterator].line\",colorsCopy[iterator].line );\n        console.log(\"color\",color);\n        console.log(\"colorsCopy[iterator].name\",colorsCopy[iterator].name );\n        //Si la ligne dont on change la couleur est trouvée et si sa précédente couleur n'est pas la même, on marque la couleur pour être changée \n        if(lineName === colorsCopy[iterator].line && colorsCopy[iterator].name !== color){\n            tochange = true;\n\n        }*/\n\n        //On récupère le code couleur de la couleur a attribuer\n        if(color === colorsCopy[iterator].name){\n            colorCode = colorsCopy[iterator].code;\n            console.log(\"colorCode : \", colorCode);\n        }\n        \n\n    }\n\n    //console.log(\"toChange : \", tochange);\n\n\n    //if(tochange === true){\n\n        //On cherche la ligne, on la supprime et recréée avec la bonne couleur (pas possible de modifier juste la variable stroke)\n        //Suppression de la ligne entrain suppression de la couleur de cette ligne et réattribution de la couleur initiale de la ligne a une autre si elle est utilisée plusieurs fois \n        //On récrée une ligne avec la bonne couleur\n        for (let i in tabLines){\n            if(typeof(tabLines[i]) !== 'undefined'){\n            \n                if(tabLines[i].key === lineName){\n                    //tabLines[i].props.stroke = color;\n                    tabLines.splice(i,1);\n                    //Delete color va se charger de supprimer la ligne dans les couleurs et de changer de propriétaire la couleur si elle est utilisée par d'autres lignes\n                    this.deleteColor(lineName);\n                    tabLines.push(<Line key={lineName} type=\"natural\" dataKey={lineName} stroke={colorCode} dot={false} />)\n                }\n\n            }\n        }\n        \n        //On change les valeurs dans colors (pour référence des utilisations des couleurs)\n        for(let iterator in colorsCopy)\n        {\n            //Si la nouvelle couleur n'était pas utilisée, on la marque comme tel avec le nom de la ligne associé\n            if(colorsCopy[iterator].name === color && colorsCopy[iterator].used === false){\n                colorsCopy[iterator].used = true;\n                colorsCopy[iterator].line = lineName;\n            }\n        }\n\n    \n\n        this.setState({\n            colors: colorsCopy,\n            lines: tabLines,\n            data: this.state.data.slice(),\n        });\n\n    //}\n    \n    \n\n}\n\nupdateDisplayedLines(name,displayed){\n\n    console.log(\"name\",name)\n    console.log(\"displayed\",displayed)\n    //Variable pour savoir si une ligne marquée comme affichée est absente des lignes affichée (auquel cas on la créée)\n    let toDisplay = true;\n    let tab = this.state.displayedColumns;\n    let tabLines = this.state.lines;\n    //On rempli d'abord le tableau des lignes affichées\n        for(let i = 0; i<tab.length; i++){\n            if(tab[i].name === name ){\n                tab[i].displayed = displayed\n            }\n\n        }\n    //Puis on update les lignes affichées avec le tableau\n        for(let i = 0; i<tab.length; i++){\n\n            //SUPPRESSION\n            //Si la ligne n'est pas affichée, on supprime la ligne qui a le même nom si elle est présente dans le tableau\n            if(tab[i].displayed === false ){\n                let lenghtLines = tabLines.length;\n                for(let j = 0; j < lenghtLines; j++){\n                console.log(\" tabLines lenght\",lenghtLines)\n\n                if(typeof(tabLines[j]) !== 'undefined' && typeof(tab[i]) !== 'undefined'){\n                    if(tab[i].name === tabLines[j].props.dataKey ){\n                        tabLines.splice(j,1);\n                        this.deleteColor(tab[i].name);\n\n                    }\n                }\n                    \n                }\n            }\n\n            //AJOUT\n            //Si la ligne marquée pour l'affichage , on vérifie si si elle l'est déjà, sinon on l'ajoute aux lignes\n            if(tab[i].displayed === true ){\n                for(let j = 0; j<tabLines.length; j++){\n                    if(typeof(tabLines[j]) !== 'undefined' && typeof(tab[i]) !== 'undefined'){\n\n                        if(tab[i].name === tabLines[j].props.dataKey ){\n                            toDisplay = false;\n                        }\n                    }\n                }\n\n                if(toDisplay===true){\n\n                    tabLines.push(<Line key={tab[i].name.toString()} type=\"natural\" dataKey={tab[i].name.toString()} stroke={this.generateColor(tab[i].name.toString())} dot={false} />)\n                    console.log(\"AJOUT tabLines\",tabLines)\n\n                }\n\n                if(toDisplay === false){\n                    toDisplay = true;\n                }\n\n\n            }\n        }\n        const { data } = this.state;\n        this.setState({\n            displayedColumns: tab,\n            lines: tabLines,\n            data: data.slice(),\n        });\n\n    \n        \n\n}\n\n    render() {\n    console.log(\"DATA\",this.state.data);\n\n    console.log(\"columns\",this.state.columns)\n    \n \n\n    return(\n    \n    <>\n        <div>\n        <Settings lines = {this.state.lines} data = {this.state.columns} updateLinesFuntion = {this.updateDisplayedLines} displayedLines = {this.state.displayedColumns} changeColor = {this.changeColor}/>\n        </div>\n\n        <div style={{ width: '90%', height: 600, marginTop:15 }}>\n        \n        <ResponsiveContainer>\n            <LineChart \n\n                    width={this.state.graphWidth} \n                    height={this.state.graphHeight} \n                    data={this.state.data}>\n                        <CartesianGrid strokeDasharray={this.state.dashArray} />\n                        <XAxis dataKey={this.state.XAxisName}/>\n                        <YAxis dataKey={this.state.YAxisName}/>\n                        {this.state.lines}\n                        <Tooltip />\n                        <Legend height={60} />\n                    </LineChart>\n        </ResponsiveContainer>    \n    </div>\n   </>\n    );\n    \n  }\n  \n  }\n  \n  export default LinearChart;","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/ChartSettings/LinearChartSettings.js",["182"],"/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/LayoutComponent/SettingsTable.js",["183","184","185","186","187","188","189"],"import DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button';\nimport React, { Component, useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table'\nimport DropDownColors from './DropDownColors'\n\n\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <Button\n    href=\"\"\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    &#x25bc;\n  </Button>\n));\n\n\n// forwardRef again here!\n// Dropdown needs access to the DOM of the Menu to measure it\nconst CustomMenu = React.forwardRef(\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n    const [value, setValue] = useState('');\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={className}\n        aria-labelledby={labeledBy}\n      >\n        <FormControl\n          autoFocus\n          className=\"mx-3 my-2 w-auto\"\n          placeholder=\"Type to filter...\"\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n        <ul className=\"list-unstyled\">\n          {React.Children.toArray(children).filter(\n            (child) =>\n              !value || child.props.children.toLowerCase().startsWith(value),\n          )}\n        </ul>\n      </div>\n    );\n  },\n);\n\n  export default class SettingsTable extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          selected: \"Changer donnée\",\n          data : this.props.data,\n          item : null\n        };\n         \n    }\n\n\n    handleChangeCheckbox = (event) => {\n      //console.log(\"TARGET NAME\",event.target.id.toString())\n      this.props.updateLinesFuntion(event.target.id.toString(), event.target.checked)\n    \n    }\n\n    //Retourne la couleur en hex de la ligne passée en paramètres\n    getHighlightedColor(name){\n      let color=\"\";\n      for(let i in this.props.lines){\n\n        if(typeof(this.props.lines[i]) !== 'undefined'){\n          //console.log(this.props.lines[i].props)\n\n          if(this.props.lines[i].key === name){\n            color = this.props.lines[i].props.stroke;\n          }\n        }\n      }\n\n      return color;\n    }\n\n    render(){\n      let items = null;\n      let highlightColor = \"\";\n\n      //Création des lignes affichées\n      //Pour chaque colonne\n      items = Object.keys(this.state.data)\n                .map(key => { \n                  //On parcours le tableau de référence d'affichage des lignes pour savoir lesquelles sont déjà affichées et donc lesquelles doivent être cochées \n                  for(let i in this.props.displayedLines){\n                    //Si la valeur du tableau de colonnes n'est pas null\n                    if(this.state.data[key].name !== null){\n                      //si on trouve la même ligne dans les deux tableaux, on peut créé l'objet en entrant dans la valeur checked de la checkbox le bolléen d'affichage\n                      if(this.state.data[key].name === this.props.displayedLines[i].name){\n                        //console.log(\"get highlight\",this.getHighlightedColor(this.state.data[key].name))\n                        return (\n                          <tr key = {this.props.displayedLines[i].name}>\n                            <td> <Form.Check key = {this.props.displayedLines[i].name} id={this.state.data[key].name} onChange={this.handleChangeCheckbox} checked={this.props.displayedLines[i].displayed}/> </td>\n                            <td>{this.state.data[key].name}</td>\n                            <td><DropDownColors key = {this.props.displayedLines[i].name} highlightColor = {this.getHighlightedColor(this.state.data[key].name)} changeColor = {this.props.changeColor} activeLine = {this.state.data[key].name}/></td>\n                          </tr>\n                            \n                            )\n                      }\n\n                      \n                    }\n                  }\n                   \n                    \n                })\n      \n        return(\n          <Table striped bordered hover size=\"sm\">\n            <thead>\n              <tr>\n                <th>Affichée</th>\n                <th>Donnée</th>\n                <th>Couleur</th>\n              </tr>\n            </thead>\n            <tbody>\n                {items}\n            </tbody>\n          </Table>\n              \n          \n      );\n    }\n\n}\n  \n","/Users/louiscauquelin/Desktop/Travail/Cours/ING5/PFE/b2s/src/containers/Account/Admin/Graphiques/LayoutComponent/DropDownColors.js",["190","191","192","193","194","195","196","197","198"],{"ruleId":"199","severity":1,"message":"200","line":5,"column":8,"nodeType":"201","messageId":"202","endLine":5,"endColumn":14},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"199","severity":1,"message":"207","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":11},{"ruleId":"199","severity":1,"message":"208","line":85,"column":15,"nodeType":"201","messageId":"202","endLine":85,"endColumn":19},{"ruleId":"209","severity":1,"message":"210","line":46,"column":77,"nodeType":"211","messageId":"212","endLine":46,"endColumn":79},{"ruleId":"209","severity":1,"message":"210","line":48,"column":77,"nodeType":"211","messageId":"212","endLine":48,"endColumn":79},{"ruleId":"199","severity":1,"message":"213","line":1,"column":27,"nodeType":"201","messageId":"202","endLine":1,"endColumn":35},{"ruleId":"199","severity":1,"message":"214","line":1,"column":36,"nodeType":"201","messageId":"202","endLine":1,"endColumn":49},{"ruleId":"199","severity":1,"message":"215","line":3,"column":3,"nodeType":"201","messageId":"202","endLine":3,"endColumn":8},{"ruleId":"199","severity":1,"message":"216","line":3,"column":65,"nodeType":"201","messageId":"202","endLine":3,"endColumn":78},{"ruleId":"199","severity":1,"message":"217","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":14},{"ruleId":"199","severity":1,"message":"218","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":17},{"ruleId":"199","severity":1,"message":"219","line":8,"column":8,"nodeType":"201","messageId":"202","endLine":8,"endColumn":11},{"ruleId":"199","severity":1,"message":"220","line":9,"column":8,"nodeType":"201","messageId":"202","endLine":9,"endColumn":11},{"ruleId":"199","severity":1,"message":"221","line":10,"column":8,"nodeType":"201","messageId":"202","endLine":10,"endColumn":22},{"ruleId":"199","severity":1,"message":"222","line":11,"column":8,"nodeType":"201","messageId":"202","endLine":11,"endColumn":16},{"ruleId":"199","severity":1,"message":"223","line":14,"column":8,"nodeType":"201","messageId":"202","endLine":14,"endColumn":11},{"ruleId":"209","severity":1,"message":"210","line":99,"column":16,"nodeType":"211","messageId":"212","endLine":99,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":145,"column":17,"nodeType":"226","messageId":"227","endLine":145,"endColumn":48},{"ruleId":"199","severity":1,"message":"220","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":11},{"ruleId":"199","severity":1,"message":"221","line":1,"column":8,"nodeType":"201","messageId":"202","endLine":1,"endColumn":22},{"ruleId":"199","severity":1,"message":"222","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"218","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":17},{"ruleId":"199","severity":1,"message":"228","line":12,"column":7,"nodeType":"201","messageId":"202","endLine":12,"endColumn":19},{"ruleId":"199","severity":1,"message":"229","line":29,"column":7,"nodeType":"201","messageId":"202","endLine":29,"endColumn":17},{"ruleId":"199","severity":1,"message":"230","line":96,"column":11,"nodeType":"201","messageId":"202","endLine":96,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":101,"column":26,"nodeType":"211","messageId":"212","endLine":101,"endColumn":28},{"ruleId":"199","severity":1,"message":"231","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":19},{"ruleId":"199","severity":1,"message":"217","line":4,"column":8,"nodeType":"201","messageId":"202","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"213","line":5,"column":28,"nodeType":"201","messageId":"202","endLine":5,"endColumn":36},{"ruleId":"199","severity":1,"message":"232","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":12},{"ruleId":"199","severity":1,"message":"233","line":7,"column":8,"nodeType":"201","messageId":"202","endLine":7,"endColumn":17},{"ruleId":"209","severity":1,"message":"210","line":27,"column":26,"nodeType":"211","messageId":"212","endLine":27,"endColumn":28},{"ruleId":"199","severity":1,"message":"234","line":74,"column":11,"nodeType":"201","messageId":"202","endLine":74,"endColumn":16},{"ruleId":"199","severity":1,"message":"235","line":77,"column":7,"nodeType":"201","messageId":"202","endLine":77,"endColumn":12},{"ruleId":"209","severity":1,"message":"210","line":78,"column":26,"nodeType":"211","messageId":"212","endLine":78,"endColumn":28},"no-unused-vars","'Chart1' is defined but never used.","Identifier","unusedVar","no-native-reassign",["236"],"no-negated-in-lhs",["237"],"'Aux' is defined but never used.","'hash' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","'PureComponent' is defined but never used.","'Label' is defined but never used.","'ReferenceArea' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'CSV' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'CustomToggle' is assigned a value but never used.","'CustomMenu' is assigned a value but never used.","'highlightColor' is assigned a value but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","'lines' is assigned a value but never used.","'items' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]